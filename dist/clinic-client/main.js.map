{"version":3,"sources":["./src/app/services/patient.service.ts","./src/app/pages/practitioner/nurse-add/nurse-add.component.ts","./src/app/pages/practitioner/nurse-add/nurse-add.component.html","./src/app/pages/admin/admin-home/admin-home.component.ts","./src/app/pages/admin/admin-home/admin-home.component.html","./src/app/services/admin.service.ts","./src/environments/environment.ts","./src/app/pages/practicioner-dashboard/practicioner-dashboard.component.ts","./src/app/pages/practicioner-dashboard/practicioner-dashboard.component.html","./src/app/pages/login/login.component.ts","./src/app/pages/login/login.component.html","./src/app/pages/patient/patient-home/patient-home.component.ts","./src/app/pages/patient/patient-home/patient-home.component.html","./src/app/pages/practitioner/doctor-list/doctor-list.component.ts","./src/app/pages/practitioner/doctor-list/doctor-list.component.html","./src/app/services/appointments.service.ts","./src/app/pages/admin/admin-add/admin-add.component.ts","./src/app/pages/admin/admin-add/admin-add.component.html","./src/app/pages/admin-dashboard/admin-dashboard.component.ts","./src/app/pages/admin-dashboard/admin-dashboard.component.html","./src/app/pages/practitioner/nurse-list/nurse-list.component.ts","./src/app/pages/practitioner/nurse-list/nurse-list.component.html","./src/app/services/userauth.service.ts","./src/app/pages/practitioner/practitioner-homepage/practitioner-homepage.component.ts","./src/app/pages/practitioner/practitioner-homepage/practitioner-homepage.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/pages/patient/patient-list/patient-list.component.ts","./src/app/pages/patient/patient-list/patient-list.component.html","./src/app/app.module.ts","./src/app/pages/patient/patient-add/patient-add.component.ts","./src/app/pages/patient/patient-add/patient-add.component.html","./src/app/pages/register/register.component.ts","./src/app/pages/register/register.component.html","./src/app/pages/practitioner/doctor-add/doctor-add.component.ts","./src/app/pages/practitioner/doctor-add/doctor-add.component.html","./src/app/pages/patient-dashboard/patient-dashboard.component.ts","./src/app/pages/patient-dashboard/patient-dashboard.component.html","./src/app/pages/admin/admin-list/admin-list.component.ts","./src/app/pages/admin/admin-list/admin-list.component.html","./src/app/services/practitioner.service.ts","./src/app/pages/components/header/header.component.ts","./src/app/pages/components/header/header.component.html","./src/app/pages/components/clock/clock.component.ts","./src/app/pages/components/clock/clock.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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;QAAA,8DAAE;QAAA,4DAAS;QAC9B,8EAAmB;QAAA,8DAAE;QAAA,4DAAS;QAC9B,8EAAmB;QAAA,8DAAE;QAAA,4DAAS;QAC9B,8EAAmB;QAAA,8DAAE;QAAA,4DAAS;QAC9B,8EAAmB;QAAA,8DAAE;QAAA,4DAAS;QAC9B,8EAAmB;QAAA,8DAAE;QAAA,4DAAS;QAC9B,8EAAmB;QAAA,8DAAE;QAAA,4DAAS;QAC9B,8EAAmB;QAAA,8DAAE;QAAA,4DAAS;QAC9B,8EAAmB;QAAA,8DAAE;QAAA,4DAAS;QAC9B,8EAAmB;QAAA,8DAAE;QAAA,4DAAS;QAC9B,8EAAmB;QAAA,8DAAE;QAAA,4DAAS;QAC9B,8EAAmB;QAAA,8DAAE;QAAA,4DAAS;QAC9B,8EAAmB;QAAA,8DAAE;QAAA,4DAAS;QAC9B,8EAAmB;QAAA,8DAAE;QAAA,4DAAS;QAC9B,8EAAmB;QAAA,8DAAE;QAAA,4DAAS;QAC9B,8EAAmB;QAAA,8DAAE;QAAA,4DAAS;QAC9B,8EAAmB;QAAA,8DAAE;QAAA,4DAAS;QAC9B,8EAAmB;QAAA,8DAAE;QAAA,4DAAS;QAC9B,8EAAmB;QAAA,8DAAE;QAAA,4DAAS;QAC9B,8EAAmB;QAAA,8DAAE;QAAA,4DAAS;QAC9B,8EAAmB;QAAA,8DAAE;QAAA,4DAAS;QAC9B,8EAAmB;QAAA,8DAAE;QAAA,4DAAS;QAC9B,8EAAmB;QAAA,8DAAE;QAAA,4DAAS;QAC9B,8EAAmB;QAAA,8DAAE;QAAA,4DAAS;QAC9B,8EAAmB;QAAA,8DAAE;QAAA,4DAAS;QAC9B,8EAAmB;QAAA,8DAAE;QAAA,4DAAS;QAC9B,8EAAmB;QAAA,8DAAE;QAAA,4DAAS;QAC9B,8EAAmB;QAAA,8DAAE;QAAA,4DAAS;QAC9B,8EAAmB;QAAA,8DAAE;QAAA,4DAAS;QAC9B,8EAAmB;QAAA,8DAAE;QAAA,4DAAS;QAC9B,8EAAmB;QAAA,8DAAE;QAAA,4DAAS;QAC9B,8EAAmB;QAAA,+DAAE;QAAA,4DAAS;QAC9B,+EAAmB;QAAA,+DAAE;QAAA,4DAAS;QAC9B,+EAAmB;QAAA,+DAAE;QAAA,4DAAS;QAC9B,+EAAmB;QAAA,+DAA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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Patients } from '../models/patients';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PatientService {\n\n  constructor(private http: HttpClient) { }\n\n  API_SERVER = 'http://34.197.208.129:3000';\n\n  readPatient(){\n    return this.http.get<Patients[]>(`${this.API_SERVER}/patients`);\n  }\n\n  createPatient(patient: Patients){\n    return this.http.post<Patients>(`${this.API_SERVER}/patients`, patient);\n  }\n\n  deletePatient(_id: string){\n      return this.http.delete(`${this.API_SERVER}/patients/${_id}`);\n  }\n\n  updatePatient(id: string){\n    return this.http.put<Patients>(`${this.API_SERVER}/admin`, id);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Nurses } from 'src/app/models/nurses';\nimport { PractitionerService } from 'src/app/services/practitioner.service';\n\n\n\n@Component({\n  selector: 'app-nurse-add',\n  templateUrl: './nurse-add.component.html',\n  styleUrls: ['./nurse-add.component.scss']\n})\nexport class NurseAddComponent implements OnInit {\n\n  constructor(private nurseService: PractitionerService) { }\n\n  createNurse(nurse: Nurses){\n    this.nurseService.createNurse(nurse).subscribe((res) => { console.log(res)});\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n    <h2>Add Nurse</h2>\n</div>\n<h3>Nurse Information</h3>\n<mat-divider></mat-divider>\n\n<form #nurse='ngForm'>\n    <div fxLayoutGap='50px'>\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Email</mat-label>\n            <input matInput name='email' [(ngModel)]='nurse.email' placeholder=\"someone@mail.com\" required>\n        </mat-form-field>\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Password</mat-label>\n            <input matInput name='password' [(ngModel)]='nurse.password' required>\n        </mat-form-field>\n    </div>\n    <div fxLayoutGap='50px'>\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Title</mat-label>\n            <input matInput name='title' [(ngModel)]='nurse.title' required>\n        </mat-form-field>\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Paging Number</mat-label>\n            <input matInput name='pagingNum' [(ngModel)]='nurse.pagingNum' required>\n        </mat-form-field>\n    </div>\n    <div fxLayoutGap='50px'>\n        <mat-form-field appearance=\"fill\">\n            <mat-label>First Name</mat-label>\n            <input matInput name='fName' [(ngModel)]='nurse.fName' required>\n        </mat-form-field>\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Last Name</mat-label>\n            <input matInput name='lName' [(ngModel)]='nurse.lName' required>\n        </mat-form-field>\n    </div>\n    <mat-card-actions>\n        <button mat-raised-button color='primary' (click)='createNurse(nurse.value)'>Submit</button>\n        <button mat-raised-button routerLink='../doctor-list'>Cancel</button>\n    </mat-card-actions>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { AppointmentsService } from 'src/app/services/appointments.service';\n\n@Component({\n  selector: 'app-admin-home',\n  templateUrl: './admin-home.component.html',\n  styleUrls: ['./admin-home.component.scss']\n})\nexport class AdminHomeComponent implements OnInit {\n\n  selectedDate: any;\n  onSelect(event) {\n    console.log(event);\n    this.selectedDate = event;\n  }\n\n  displayedColumns: string[] = ['date', 'time', 'doctorID', 'note', 'action'];\n  appointments = [];\n\n  constructor(private appointmentService: AppointmentsService) { }\n\n  ngOnInit(): void {\n    this.appointmentService.readAppointments().subscribe((res) => {this.appointments = res});\n  }\n\n}\n","<mat-grid-list cols='5' rowHeight='200px'>\n    <mat-grid-tile [colspan]=3 [rowspan]=4>\n        <mat-card class=\"c-1\">\n            <mat-card-header>\n                <mat-card-title>Upcoming Appointments</mat-card-title>\n            </mat-card-header>\n            <mat-card-content>\n                <table mat-table [dataSource]='appointments' class=\"mat-elevation-z8\">\n\n                    <ng-container matColumnDef=\"date\">\n                        <th mat-header-cell *matHeaderCellDef> Date </th>\n                        <td mat-cell *matCellDef=\"let element\"> {{element.date}} </td>\n                    </ng-container>\n\n\n                    <ng-container matColumnDef=\"time\">\n                        <th mat-header-cell *matHeaderCellDef> Time </th>\n                        <td mat-cell *matCellDef=\"let element\"> {{element.time}} </td>\n                    </ng-container>\n\n\n                    <ng-container matColumnDef=\"doctorID\">\n                        <th mat-header-cell *matHeaderCellDef> Doctor </th>\n                        <td mat-cell *matCellDef=\"let element\"> {{element.doctorID}} </td>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"note\">\n                        <th mat-header-cell *matHeaderCellDef> Note </th>\n                        <td mat-cell *matCellDef=\"let element\"> \n                            <button mat-raised-button color=\"primary\">Add Note</button>    \n                        </td>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"action\">\n                        <th mat-header-cell *matHeaderCellDef> Cancel Appointment </th>\n                        <td mat-cell *matCellDef=\"let element\">\n                            <button mat-raised-button color='warn'>Cancel</button>\n                        </td>\n                    </ng-container>\n\n                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n                </table>\n            </mat-card-content>\n        </mat-card>\n    </mat-grid-tile>\n    <mat-grid-tile [colspan]=2 [rowspan]=3 class=\"t\">\n        <mat-card class=\"c-2\">\n            <mat-calendar [selected]=\"selectedDate\" (selectedChange)=\"onSelect($event)\"></mat-calendar>\n        </mat-card>\n    </mat-grid-tile>\n    <mat-grid-tile [colspan]=2 [rowspan]=1>\n        <mat-card class=\"c-3\">\n            <div>\n                <form>\n                    <div fxLayout=\"row\" fxLayoutAlign=\"space-evenly center\">\n                        <mat-form-field apperance='outline'>\n                            <mat-label>Date</mat-label>\n                            <input matInput name=\"date\" required>\n                        </mat-form-field>\n                        <mat-form-field apperance='outline'>\n                            <mat-label>Time</mat-label>\n                            <input matInput name=\"time\" required>\n                        </mat-form-field>\n                    </div>\n                    <div fxLayout=\"row\" fxLayoutAlign=\"space-evenly center\">\n                        <mat-form-field apperance='outline'>\n                            <mat-label>Doctor</mat-label>\n                            <input matInput name=\"date\" required>\n                        </mat-form-field>\n                        <mat-form-field apperance='outline'>\n                            <mat-label>Appointment Type</mat-label>\n                            <input matInput name=\"time\" required>\n                        </mat-form-field>\n                    </div>\n                    <div fxLayout=\"row\" fxLayoutAlign=\"space-evenly center\">\n                    </div>\n                    <mat-card-actions fxLayout='row' fxLayoutAlign='center center'>\n                        <button mat-raised-button color='primary'>Create Appointment</button>\n                    </mat-card-actions>\n                </form>\n            </div>\n        </mat-card>\n    </mat-grid-tile>\n</mat-grid-list>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Admin } from '../models/admin';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\n\n  constructor(private http: HttpClient) { }\n\n  API_SERVER = 'http://34.197.208.129:3000';\n\n  readAdmin(){\n    return this.http.get<Admin[]>(`${this.API_SERVER}/admins`);\n  }\n\n  createAdmin(admin: Admin){\n    return this.http.post<Admin[]>(`${this.API_SERVER}/admins`, admin);\n  }\n\n  deleteAdmin(_id: string){\n    return this.http.delete(`${this.API_SERVER}/admins/${_id}`);\n  }\n\n  updateAdmin(id: string){\n    return this.http.put<Admin>(`${this.API_SERVER}/admin`, id);\n  }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiURL: 'http://localhost:3001'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-practicioner-dashboard',\n  templateUrl: './practicioner-dashboard.component.html',\n  styleUrls: ['./practicioner-dashboard.component.scss']\n})\nexport class PracticionerDashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar color='primary'>\n    <mat-toolbar-row>\n        <span>AMS</span>\n        <div fxFlex fxLayout='row' fxLayoutAlign='flex-end'>\n            <ul fxLayout='row' fxLayoutGap='20px'>\n                <li>\n                    <button mat-icon-button>\n                        <mat-icon>help</mat-icon>\n                    </button>\n                </li>\n                <li>\n                    <button mat-button [matMenuTriggerFor]='menu'>\n                        <mat-icon>person</mat-icon>\n                        <mat-menu #menu='matMenu'>\n                            <button mat-menu-item routerLink='/login'>\n                                <mat-icon>exit_to_app</mat-icon>\n                                Sign Out\n                            </button>\n                        </mat-menu>\n                    </button>\n                </li>\n            </ul>\n        </div>\n    </mat-toolbar-row>\n</mat-toolbar>\n<mat-drawer-container>\n    <mat-drawer mode='side' opened>\n        <mat-nav-list>\n            <div class=\"profile-pic\">\n                <div class=\"header\">\n                    <h2>Dr. GoodSmile</h2>\n                    <h4>Doctor</h4>\n                </div>\n                <img src=\"https://img-comment-fun.9cache.com/media/arGxZDX/a3MzPwmn_700w_0.jpg\" alt=\"\">\n            </div>\n            <mat-divider></mat-divider>\n            <app-clock></app-clock>\n        </mat-nav-list>\n    </mat-drawer>\n    <mat-drawer-content>\n        <router-outlet></router-outlet>\n    </mat-drawer-content>\n</mat-drawer-container>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { AuthUserDTO } from \"../../../../../appointment-service/src/entities/users/dto/auth-user.dto\";\nimport { UsersService } from \"../../../../../appointment-service/src/entities/users/users.service\";\nimport { Users } from '../../models/users';\nimport { UserAuthService } from '../../services/userauth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\n\nexport class LoginComponent implements OnInit {\n  //@Input()\n  email: string;\n  password: string;\n  //private authEntry: Users;\n\n  submitted = false;\n\n  constructor(private userAuthService: UserAuthService, private router: Router){}\n\n  ngOnInit(): void {\n    //this.authEntry = new AuthUserDTO();\n  }\n  \n  onSubmit() { \n    this.submitted = true;\n    alert(\"form submitted \");\n  }\n\n  authenticate(){\n    console.log(this.email + \" \" + this.password);\n    //this.authEntry = { email: this.emailAddress, password: this.password };\n\n    this.userAuthService.authenticateUser(this.email, this.password)\n      .then(()=>{\n        if (this.userAuthService.user){\n          console.log(this.userAuthService.user.accessGroup);\n          if (this.userAuthService.user.accessGroup == \"Nurse\" || this.userAuthService.user.accessGroup == \"Doctor\"){\n            this.router.navigate(['/practitioner']);\n          } else if (this.userAuthService.user.accessGroup == \"Patient\"){\n            this.router.navigate(['/patient']);\n          } else if (this.userAuthService.user.accessGroup == \"Admin\"){\n            this.router.navigate(['/admin']);\n          }\n        }  \n      })\n  };\n\n  get diagnostic(){\n    return JSON.stringify(this.submitted);\n  }\n\n}\n\n","<div class=\"back\">\n    <p style=\"text-align: center;color: white;font-family: Arial, Helvetica, sans-serif;font-size: 20pt;margin-top: 160px;\">Patient Management System</p>\n    <div class=\"div-center\">\n        <div class=\"content\">\n            <!--{{ diagnostic }}-->\n            <form #loginForm=\"ngForm\" (ngSubmit)=\"onSubmit()\">\n                <label>Email Address:</label><br/>\n                <input type=\"text\" style=\"height:25px;font-size:12pt;\" id=\"email\" \n                required name=\"emailAddress\" [(ngModel)]=\"email\"/>\n                <!--<div [hidden]=\"(emailAddress.valid) || (emailAddress.invalid && emailAddress.untouched)\" class=\"alert alert-danger\">\n                    Email Address is required\n                </div>-->\n                <br/><br/>\n                <label>Password:</label><br/>\n                <input type=\"password\" style=\"height:25px;font-size:12pt;\" id=\"password\" required name=\"password\" [(ngModel)]=\"password\"/>\n               <!-- <div [hidden]=\"(password.valid) || (password.invalid && password.untouched)\" class=\"alert alert-danger\">\n                    Password is required\n                </div>-->\n                <br/><br/>\n                <button type=\"submit\" class=\"button\" [disabled]=\"!loginForm.form.valid\" (click)=\"authenticate()\">Login</button><br/><br/>\n                <a routerLink=\"register\">New User? Click to Register</a>\n            </form>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-patient-home',\n  templateUrl: './patient-home.component.html',\n  styleUrls: ['./patient-home.component.scss']\n})\n\nexport class PatientHomeComponent implements OnInit {\n  selectedDate: any;\n  onSelect(event){\n    console.log(event);\n    this.selectedDate= event;\n  }\n\n  displayedColumns: string[] = ['date', 'time', 'doctorID', 'cancel'];\n  patientAppointments = [];\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-grid-list cols='4' rowheight='100px'>\n    <mat-grid-tile [colspan]=3 [rowspan]=1>\n        <mat-card class=\"c-1\">\n            <mat-card-header>\n                <mat-card-title>Upcoming Appointments</mat-card-title>\n            </mat-card-header>\n            <mat-card-content>\n                <table mat-table [dataSource]='patientAppointments' class=\"mat-elevation-z8\">\n\n                    <ng-container matColumnDef=\"date\">\n                        <th mat-header-cell *matHeaderCellDef> Date </th>\n                        <td mat-cell *matCellDef=\"let element\"> {{element.date}} </td>\n                    </ng-container>\n\n\n                    <ng-container matColumnDef=\"time\">\n                        <th mat-header-cell *matHeaderCellDef> Time </th>\n                        <td mat-cell *matCellDef=\"let element\"> {{element.time}} </td>\n                    </ng-container>\n\n\n                    <ng-container matColumnDef=\"doctorID\">\n                        <th mat-header-cell *matHeaderCellDef> Doctor </th>\n                        <td mat-cell *matCellDef=\"let element\"> {{element.doctorID}} </td>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"cancel\">\n                        <th mat-header-cell *matHeaderCellDef> Cancel Appointment </th>\n                        <td mat-cell *matCellDef=\"let element\">\n                            <button mat-raised-button color='warn'>cancel</button>\n                        </td>\n                    </ng-container>\n\n                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n                </table>\n            </mat-card-content>\n        </mat-card>\n    </mat-grid-tile>\n    <mat-grid-tile [colspan]=1 [rowspan]=1>\n        <mat-card class=\"c-2\">\n            <mat-calendar [selected]=\"selectedDate\" (selectedChange)=\"onSelect($event)\"></mat-calendar>\n        </mat-card>\n    </mat-grid-tile>\n    <mat-grid-tile [colspan]=2 [rowspan]=1>\n        <mat-card class=\"c-3\">\n            <mat-card-header>\n                <mat-card-title>Register for Appointment</mat-card-title>\n            </mat-card-header>\n            <form action=\"\" fxLayout=\"row\" fxLayoutAlign=\"space-evenly center\">\n                <div>\n                <mat-form-field appearance='fill'>\n                    <mat-label>Date</mat-label>\n                    <input matInput name=\"date\" required>\n                </mat-form-field>\n                <mat-form-field appearance='fill'>\n                    <mat-label>Time</mat-label>\n                    <input matInput name=\"time\" required>\n                </mat-form-field>\n                </div>\n                <div>\n                <mat-form-field appearance='fill'>\n                    <mat-label>Doctor</mat-label>\n                    <input matInput name=\"doctor\" required>\n                </mat-form-field>\n                <mat-form-field appearance='fill'>\n                    <mat-label>Appointment Type</mat-label>\n                    <input matInput name=\"type\" required>\n                </mat-form-field>\n                </div>\n                <mat-card-actions>\n                    <button mat-raised-button color='primary'>Submit</button>\n                </mat-card-actions>\n            </form>\n        </mat-card>\n    </mat-grid-tile>\n    <mat-grid-tile [colspan]=2 [rowspan]=1>\n        <mat-card class=\"c-4\">\n            <mat-card-header>\n                <mat-card-title>Notes</mat-card-title>\n            </mat-card-header>\n            <mat-card-content>\n                Notes suppose to go in here\n            </mat-card-content>\n        </mat-card>\n    </mat-grid-tile>\n</mat-grid-list>","import { Component, OnInit } from '@angular/core';\nimport { PractitionerService } from '../../../services/practitioner.service'\n\n@Component({\n  selector: 'app-doctor-list',\n  templateUrl: './doctor-list.component.html',\n  styleUrls: ['./doctor-list.component.scss']\n})\nexport class DoctorListComponent implements OnInit {\n\n  displayedColumns: string[] = ['_id', 'fName', 'lName', 'email', 'title', 'pagingNum', 'edit', 'delete'];\n  doctorList = [];\n\n  constructor(private doctorService: PractitionerService) { }\n\n  ngOnInit(): void {\n    this.doctorService.readDoctor().subscribe((res) => {this.doctorList = res});\n  }\n\n  deleteDoctor(_id){\n    this.doctorService.deleteDoctor(_id).subscribe((res) => {console.log(res);\n    });\n  }\n\n}\n","<h2>Doctors</h2>\n<div class=\"mat-elevation-z8\">\n\n    <table mat-table [dataSource]=\"doctorList\" class=\"mat-elevation-z8\">\n\n        <ng-container matColumnDef=\"_id\">\n            <th mat-header-cell *matHeaderCellDef> ID </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element._id}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"fName\">\n            <th mat-header-cell *matHeaderCellDef> First </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.fName}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"lName\">\n            <th mat-header-cell *matHeaderCellDef> Last </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.lName}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"email\">\n            <th mat-header-cell *matHeaderCellDef> Email </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.email}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"title\">\n            <th mat-header-cell *matHeaderCellDef> Title </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.title}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"pagingNum\">\n            <th mat-header-cell *matHeaderCellDef> Pagin Number </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.pagingNum}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"edit\">\n            <th mat-header-cell *matHeaderCellDef> Edit </th>\n            <td mat-cell *matCellDef=\"let element\">\n                <button mat-icon-button color=\"secondary\">\n                    <mat-icon>launch</mat-icon>\n                </button>\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"delete\">\n            <th mat-header-cell *matHeaderCellDef> Delete </th>\n            <td mat-cell *matCellDef=\"let element\">\n                <button mat-icon-button (click)='deleteDoctor(element._id)' color=\"warn\">\n                    <mat-icon>delete_outline</mat-icon>\n                </button>\n            </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Appointments } from 'src/app/models/appointments';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppointmentsService {\n\n  API_SERVER = 'http://34.197.208.129:3000';\n\n  constructor(private http: HttpClient) { }\n\n  readAppointments(){\n    return this.http.get<Appointments[]>(`${this.API_SERVER}/appointments`)\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Admin } from 'src/app/models/admin';\nimport { AdminService } from '../../../services/admin.service';\n\n@Component({\n  selector: 'app-admin-add',\n  templateUrl: './admin-add.component.html',\n  styleUrls: ['./admin-add.component.scss']\n})\nexport class AdminAddComponent implements OnInit {\n\n  constructor(private adminService: AdminService) { }\n\n  createAdmin(admin: Admin) {\n    this.adminService.createAdmin(admin).subscribe((res) => { console.log(res) });\n  }\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n    <h2>Add Admin</h2>\n</div>\n<h3>Admin Information</h3>\n<mat-divider></mat-divider>\n\n<form #admin='ngForm'>\n    <div fxLayoutGap='50px'>\n        <mat-form-field appearance=\"fill\">\n            <mat-label>First Name</mat-label>\n            <input matInput name='fName' [(ngModel)]='admin.fName' required>\n        </mat-form-field>\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Last Name</mat-label>\n            <input matInput name='lName' [(ngModel)]='admin.lName' required>\n        </mat-form-field>\n    </div>\n    <div fxLayoutGap='50px'>\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Email</mat-label>\n            <input matInput name='email' [(ngModel)]='admin.email' placeholder=\"someone@mail.com\" required>\n        </mat-form-field>\n        <mat-form-field appearance=\"fill\">\n            <mat-label>PIN</mat-label>\n            <input matInput name='adminPin' [(ngModel)]='admin.adminPin' required>\n        </mat-form-field>\n    </div>\n    <div fxLayoutGap='50px'>\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Password</mat-label>\n            <input matInput name='password' [(ngModel)]='admin.password' required>\n        </mat-form-field>\n    </div>\n    <mat-card-actions>\n        <button mat-raised-button (click)='createAdmin(admin.value)' color='primary'>Submit</button>\n        <button mat-raised-button href='admin'>Cancel</button>\n    </mat-card-actions>\n</form>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-dashboard',\n  templateUrl: './admin-dashboard.component.html',\n  styleUrls: ['./admin-dashboard.component.scss']\n})\nexport class AdminDashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar color='primary'>\n    <mat-toolbar-row>\n        <span>AMS</span>\n        <div fxFlex fxLayout='row' fxLayoutAlign='flex-end'>\n            <ul fxLayout='row' fxLayoutGap='20px'>\n                <li>\n                    <button mat-icon-button>\n                        <mat-icon>help</mat-icon>\n                    </button>\n                </li>\n                <li>\n                    <button mat-button [matMenuTriggerFor]='menu'>\n                        <mat-icon>person</mat-icon>\n                        <mat-menu #menu='matMenu'>\n                            <button mat-menu-item routerLink='/login'>\n                                <mat-icon>exit_to_app</mat-icon>\n                                Sign Out\n                            </button>\n                        </mat-menu>\n                    </button>\n                </li>\n            </ul>\n        </div>\n    </mat-toolbar-row>\n</mat-toolbar>\n<mat-drawer-container>\n    <mat-drawer mode='side' opened>\n        <mat-nav-list>\n            <div class=\"profile-pic\">\n                <div class=\"header\">\n                    <h2>Brian Knauff</h2>\n                    <h4>Admin</h4>\n                </div>\n                <img src=\"https://img-comment-fun.9cache.com/media/arGxZDX/a3MzPwmn_700w_0.jpg\" alt=\"\">\n            </div>\n            <mat-divider></mat-divider>\n            <a class=\"dashboard-link\" mat-list-item routerLinkActive=\"list-item-active\"\n                routerLink=\"dashboard\">Dashboard</a>\n        </mat-nav-list>\n\n        <mat-list>\n            <mat-list-item>Patienet Management</mat-list-item>\n            <div>\n                <button mat-raised-button fxFill color='primary' routerLink='patient-add'>Create Patient</button>\n                <button mat-raised-button fxFill color='primary' routerLink='patient-list'>Modify Patient</button>\n            </div>\n            <mat-list-item>Doctor Management</mat-list-item>\n            <div>\n                <button mat-raised-button fxFill color='primary' routerLink='doctor-add'>Create Doctor</button>\n                <button mat-raised-button fxFill color='primary' routerLink='doctor-list'>Modify Doctor</button>\n            </div>\n            <mat-list-item>Nurse Management</mat-list-item>\n            <div>\n                <button mat-raised-button fxFill color='primary' routerLink='nurse-add'>Create Nurse</button>\n                <button mat-raised-button fxFill color='primary' routerLink='nurse-list'>Modify Nurse</button>\n            </div>\n            <mat-list-item>Admin Management</mat-list-item>\n            <div>\n                <button mat-raised-button fxFill color='primary' routerLink='admin-add'>Create Admin</button>\n                <button mat-raised-button fxFill color='primary' routerLink='admin-list'>Modify Admin</button>\n            </div>\n        </mat-list>\n        <mat-divider></mat-divider>\n\n    </mat-drawer>\n    <mat-drawer-content>\n        <router-outlet></router-outlet>\n    </mat-drawer-content>\n</mat-drawer-container>","import { Component, OnInit } from '@angular/core';\nimport { PractitionerService } from '../../../services/practitioner.service'\nimport { Nurses } from 'src/app/models/nurses';\n\n@Component({\n  selector: 'app-nurse-list',\n  templateUrl: './nurse-list.component.html',\n  styleUrls: ['./nurse-list.component.scss']\n})\nexport class NurseListComponent implements OnInit {\n\n  displayedColumns: string[] = ['_id', 'fName', 'lName', 'email', 'edit', 'delete'];\n  nurseList = [];\n  nurse = {}\n\n  constructor(private nurseService: PractitionerService) { }\n\n  ngOnInit(): void {\n    this.nurseService.readNurse().subscribe((res) => {this.nurseList = res});\n  }\n\n  deleteNurse(_id){\n    this.nurseService.deleteNurse(_id).subscribe((res) => { console.log(res);\n    });\n  }\n\n  updateNurse(nurseU){\n    nurseU.value._id = this.nurse['_id'];\n    this.nurseService.updateNurse(nurseU.value).subscribe((res) => {\n      console.log(res);\n    })\n  }\n\n  selectNurse(nurse){\n    this.nurse = nurse;\n  }\n\n  newNurse(){\n    this.nurse = [];\n  }\n\n}\n","<h2>Nurses</h2>\n<div class=\"mat-elevation-z8\">\n\n    <table mat-table [dataSource]=\"nurseList\" class=\"mat-elevation-z8\">\n\n        <ng-container matColumnDef=\"_id\">\n            <th mat-header-cell *matHeaderCellDef> ID </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element._id}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"fName\">\n            <th mat-header-cell *matHeaderCellDef> First </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.fName}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"lName\">\n            <th mat-header-cell *matHeaderCellDef> Last </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.lName}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"email\">\n            <th mat-header-cell *matHeaderCellDef> Email </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.email}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"title\">\n            <th mat-header-cell *matHeaderCellDef> Title </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.title}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"pagingNum\">\n            <th mat-header-cell *matHeaderCellDef> Pagin Number </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.pagingNum}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"edit\">\n            <th mat-header-cell *matHeaderCellDef> Edit </th>\n            <td mat-cell *matCellDef=\"let element\">\n                <button mat-icon-button (click)='selectNurse(element)' color=\"secondary\">\n                    <mat-icon>launch</mat-icon>\n                </button>\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"delete\">\n            <th mat-header-cell *matHeaderCellDef> Delete </th>\n            <td mat-cell *matCellDef=\"let element\">\n                <button mat-icon-button color='warn' (click)='deleteNurse(element._id)'>\n                    <mat-icon>delete_outline</mat-icon>\n                </button>\n            </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n</div>\n\n<!-- <div>\n    <mat-divider></mat-divider>\n    <mat-card>\n        <mat-card-header>\n            <mat-card-title>Update a Nurse</mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n            <form #nurseU=\"ngForm\" class=\"mat-elevation-z8\" style=\"width: 100%; padding: 5px;\">\n\n                <mat-form-field>\n                    <input matInput placeholder=\"First Name\" name=\"fName\" [(ngModel)]=\"nurse.fName\" required>\n                </mat-form-field>\n                <mat-form-field>\n                    <input matInput placeholder=\"Last Name\" name=\"lName\" [(ngModel)]=\"nurse.lName\" required>\n                </mat-form-field>\n\n                <mat-form-field>\n                    <input matInput placeholder=\"Email\" name=\"email\" [(ngModel)]=\"nurse.email\" required>\n                </mat-form-field>\n                <mat-form-field>\n                    <input matInput placeholder=\"Title\" name=\"title\" [(ngModel)]=\"nurse.title\" required>\n                </mat-form-field>\n                <mat-form-field>\n                    <input matInput placeholder=\"Paging Number\" name=\"pagingNum\" [(ngModel)]=\"nurse.paginNum\" required>\n                </mat-form-field>\n                <mat-form-field>\n                    <input matInput placeholder=\"Password\" name=\"password\" [(ngModel)]=\"nurse.password\" required>\n                </mat-form-field>\n            </form>\n\n        </mat-card-content>\n        <mat-card-actions>\n            <button mat-raised-button *ngIf=\"nurse._id\" (click)=\"updateNurse(nurseU)\" color=\"primary\">UpdateContact</button>\n            <button mat-raised-button (click)=\"newNurse()\" color=\"primary\">New..</button>\n        </mat-card-actions>\n    </mat-card>\n</div> -->","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Users, LoggedIn } from '../models/users';\nimport { retry } from 'rxjs/operators';\n\n\ntype Optional<T>=T | undefined;\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class UserAuthService {\n  \n  constructor(private http: HttpClient) { }\n  private _user?: LoggedIn;\n\n  set user(value:Optional<LoggedIn>){\n    this._user = value;\n  }\n\n  get user(){\n    return this._user;\n  };\n\n  API_SERVER = 'http://34.197.208.129:3000';\n\n  authenticateUser(email: string, password: string): Promise<LoggedIn> {\n    let params = {email, password}\n    return new Promise((resolve, reject)=>{ \n      this.http\n      .post(`${this.API_SERVER}/users/auth`, params)\n      .pipe(retry(3))\n      .toPromise()\n      .then(\n        (res:any) => {\n            console.log(res);\n            this.user = res;\n            resolve (this.user);\n        }, \n        (err)=>{\n          reject(err);\n        }\n      );\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\nexport interface PeriodicElement {\n  date: string;\n  time: string;\n  patientID: number;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {date: '5/10/2021', time: '3:00', patientID: 55},\n];\n\n@Component({\n  selector: 'app-practitioner-homepage',\n  templateUrl: './practitioner-homepage.component.html',\n  styleUrls: ['./practitioner-homepage.component.scss']\n})\nexport class PractitionerHomepageComponent implements OnInit {\n\n  selectedDate: any;\n  onSelect(event){\n    console.log(event);\n    this.selectedDate= event;\n  }\n\n  displayedColumns: string[] = ['date', 'time', 'patientID', 'addNote', 'vitals'];\n  patientAppointments = ELEMENT_DATA;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-grid-list cols='6' rowheight='100px'>\n    <mat-grid-tile [colspan]=4 [rowspan]=2>\n        <mat-card class=\"c-1\">\n            <mat-card-header>\n                <mat-card-title>Appointments</mat-card-title>\n            </mat-card-header>\n            <mat-card-content>\n                <table mat-table [dataSource]='patientAppointments' class=\"mat-elevation-z8\">\n\n                    <ng-container matColumnDef=\"date\">\n                        <th mat-header-cell *matHeaderCellDef> Date </th>\n                        <td mat-cell *matCellDef=\"let element\"> {{element.date}} </td>\n                    </ng-container>\n\n\n                    <ng-container matColumnDef=\"time\">\n                        <th mat-header-cell *matHeaderCellDef> Time </th>\n                        <td mat-cell *matCellDef=\"let element\"> {{element.time}} </td>\n                    </ng-container>\n\n\n                    <ng-container matColumnDef=\"patientID\">\n                        <th mat-header-cell *matHeaderCellDef> Patient </th>\n                        <td mat-cell *matCellDef=\"let element\"> {{element.patientID}} </td>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"addNote\">\n                        <th mat-header-cell *matHeaderCellDef> NOTE </th>\n                        <td mat-cell *matCellDef=\"let element\">\n                            <button mat-raised-button color='seconday'>ADD NOTE</button>\n                        </td>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"vitals\">\n                        <th mat-header-cell *matHeaderCellDef> Vitals </th>\n                        <td mat-cell *matCellDef=\"let element\">\n                            <button mat-raised-button color='seconday'>Vitals</button>\n                        </td>\n                    </ng-container>\n\n                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n                </table>\n            </mat-card-content>\n        </mat-card>\n    </mat-grid-tile>\n    <mat-grid-tile [colspan]=2 [rowspan]=2>\n        <mat-card class=\"c-2\">\n            <mat-calendar [selected]=\"selectedDate\" (selectedChange)=\"onSelect($event)\"></mat-calendar>\n        </mat-card>\n    </mat-grid-tile>\n    <mat-grid-tile [colspan]=6 [rowspan]=1>\n        <img src=\"https://certification.osteopathic.org/internal-medicine/wp-content/uploads/sites/13/2017/02/banner.png\">\n    </mat-grid-tile>\n</mat-grid-list>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'clinic-client';\n}\n","<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\nimport { PatientService } from 'src/app/services/patient.service';\nimport { Patients } from 'src/app/models/patients';\n\n@Component({\n  selector: 'app-patient-list',\n  templateUrl: './patient-list.component.html',\n  styleUrls: ['./patient-list.component.scss']\n})\nexport class PatientListComponent implements OnInit {\n\n  displayedColumns: string[] = ['_id', 'fName', 'middleInitial', \n  'lName', 'email', 'password', 'dob', 'address', 'primaryPhone', \n  'secondaryPhone', 'gender', 'ssn', 'emergencyContact', 'insurance', 'edit', 'delete'];\n  patientList = [];\n  patient = {};\n\n  constructor(private patientService: PatientService) { }\n\n  ngOnInit(): void {\n    this.patientService.readPatient().subscribe((res) => {this.patientList = res});\n  }\n\n  deletePatient(_id){\n    this.patientService.deletePatient(_id).subscribe((res) => {console.log(res)});\n  }\n\n  updatePatient(addPatient){\n    addPatient.value.id = this.patient['id'];\n    this.patientService.updatePatient(addPatient.value).subscribe((res) => {console.log(res);\n    });\n  }\n\n  selectPatient(patient){\n    this.patient = patient;\n  }\n\n  newPatient(){\n    this.patient = {};\n  }\n\n}\n","<h2>Patients</h2>\n\n<div class=\"mat-elevation-z8\">\n\n    <table mat-table [dataSource]=\"patientList\" class=\"mat-elevation-z8\">\n\n        <ng-container matColumnDef='_id'>\n            <th mat-header-cell *matHeaderCellDef> ID </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element._id}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"fName\">\n            <th mat-header-cell *matHeaderCellDef> First Name </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.fName}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"middleInitial\">\n            <th mat-header-cell *matHeaderCellDef> Middle Initial </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.middleInitial}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"lName\">\n            <th mat-header-cell *matHeaderCellDef> Last Name </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.lName}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"email\">\n            <th mat-header-cell *matHeaderCellDef> Email </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.email}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"password\">\n            <th mat-header-cell *matHeaderCellDef> Password </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.password}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"dob\">\n            <th mat-header-cell *matHeaderCellDef> Date of Birth </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.dob}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"address\">\n            <th mat-header-cell *matHeaderCellDef> Address </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.address}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"primaryPhone\">\n            <th mat-header-cell *matHeaderCellDef> Phone # </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.primaryPhone}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"secondaryPhone\">\n            <th mat-header-cell *matHeaderCellDef> Secondary Phone </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.secondaryPhone}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"gender\">\n            <th mat-header-cell *matHeaderCellDef> Gender </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.gender}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"ssn\">\n            <th mat-header-cell *matHeaderCellDef> Gender </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.ssn}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"emergencyContact\">\n            <th mat-header-cell *matHeaderCellDef> Emergency COntact </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.emergencyContact}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"insurance\">\n            <th mat-header-cell *matHeaderCellDef> Insurance </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.insurance}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"edit\">\n            <th mat-header-cell *matHeaderCellDef> Edit </th>\n            <td mat-cell *matCellDef=\"let element\">\n                <button mat-icon-button color=\"secondary\">\n                    <mat-icon>launch</mat-icon>\n                </button>\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"delete\">\n            <th mat-header-cell *matHeaderCellDef> Delete </th>\n            <td mat-cell *matCellDef=\"let element\">\n                <button mat-icon-button (click)='deletePatient(element._id)' color=\"warn\">\n                    <mat-icon>delete_outline</mat-icon>\n                </button>\n            </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n    </table>\n</div>\n\n<!--\n\n<div>\n    <mat-card>\n        <mat-card-header>\n            <mat-card-title>Update a Admin</mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n            <form #addPatient=\"ngForm\" class=\"mat-elevation-z8\" style=\"width: 100%; padding: 5px;\">\n\n                <mat-form-field>\n                    <input matInput placeholder=\"First Name\" name=\"fName\" [(ngModel)]=\"patient.fName\" required>\n                </mat-form-field>\n                <mat-form-field>\n                    <input matInput placeholder=\"Last Name\" name=\"lName\" [(ngModel)]=\"patient.lName\" required>\n                </mat-form-field>\n\n                <mat-form-field>\n                    <input matInput placeholder=\"Email\" name=\"email\" [(ngModel)]=\"patient.email\" required>\n                </mat-form-field>\n                <mat-form-field>\n                    <input matInput placeholder=\"PIN\" name=\"adminPin\" [(ngModel)]=\"patient.adminPin\" required>\n                </mat-form-field>\n                <mat-form-field>\n                    <input matInput placeholder=\"Password\" name=\"password\" [(ngModel)]=\"patient.password\">\n                </mat-form-field>\n            </form>\n\n        </mat-card-content>\n        <mat-card-actions>\n            <button mat-raised-button *ngIf=\"!patient.id\" (click)=\"createPatient(addPatient)\" color=\"primary\">Save\n                Contact</button>\n            <button mat-raised-button *ngIf=\"patient.id\" (click)=\"updatePatient(addPatient)\" color=\"primary\">Update\n                Contact</button>\n            <button mat-raised-button (click)=\"newPatient()\" color=\"primary\">New..</button>\n        </mat-card-actions>\n    </mat-card>\n</div>\n\n-->","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { RegisterComponent } from './pages/register/register.component';\nimport { PracticionerDashboardComponent } from './pages/practicioner-dashboard/practicioner-dashboard.component';\nimport { AdminDashboardComponent } from './pages/admin-dashboard/admin-dashboard.component';\nimport { PatientDashboardComponent } from './pages/patient-dashboard/patient-dashboard.component';\nimport { HeaderComponent } from './pages/components/header/header.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LoginComponent } from './pages/login/login.component';\n\n//Angular Material\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatListModule } from '@angular/material/list';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatCardModule } from '@angular/material/card';\nimport {MatGridListModule} from '@angular/material/grid-list';\n\n//Angular Flex-Layout\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { PatientListComponent } from './pages/patient/patient-list/patient-list.component';\nimport { AdminAddComponent } from './pages/admin/admin-add/admin-add.component';\nimport { PatientAddComponent } from './pages/patient/patient-add/patient-add.component';\nimport { PatientHomeComponent } from './pages/patient/patient-home/patient-home.component';\nimport { AdminListComponent } from './pages/admin/admin-list/admin-list.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { DoctorListComponent } from './pages/practitioner/doctor-list/doctor-list.component';\nimport { NurseListComponent } from './pages/practitioner/nurse-list/nurse-list.component';\nimport { PractitionerHomepageComponent } from './pages/practitioner/practitioner-homepage/practitioner-homepage.component';\nimport { DoctorAddComponent } from './pages/practitioner/doctor-add/doctor-add.component';\nimport { NurseAddComponent } from './pages/practitioner/nurse-add/nurse-add.component';\nimport { AdminHomeComponent } from './pages/admin/admin-home/admin-home.component';\nimport { ClockComponent } from './pages/components/clock/clock.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegisterComponent,\n    PracticionerDashboardComponent,\n    AdminDashboardComponent,\n    PatientDashboardComponent,\n    HeaderComponent,\n    PatientListComponent,\n    AdminAddComponent,\n    PatientAddComponent,\n    PatientHomeComponent,\n    AdminListComponent,\n    LoginComponent,\n    DoctorListComponent,\n    NurseListComponent,\n    PractitionerHomepageComponent,\n    DoctorAddComponent,\n    NurseAddComponent,\n    AdminHomeComponent,\n    ClockComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatDividerModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatButtonModule,\n    MatMenuModule,\n    MatListModule,\n    MatSidenavModule,\n    MatTableModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatSelectModule,\n    MatCardModule,\n    MatGridListModule,\n    FlexLayoutModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Patients } from 'src/app/models/patients';\nimport { PatientService } from 'src/app/services/patient.service';\n\n@Component({\n  selector: 'app-patient-add',\n  templateUrl: './patient-add.component.html',\n  styleUrls: ['./patient-add.component.scss']\n})\nexport class PatientAddComponent implements OnInit {\n\n  constructor(private patientService: PatientService) { }\n\n  createPatient(patient: Patients){\n    this.patientService.createPatient(patient).subscribe((res) => { console.log(res)});\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-register></app-register>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  toLogin() {\n    return this.router.navigate(['/']);\n  }\n}\n","<div class=\"secondaryBG\">\n    <div style=\"color: #6AA8EC;font-family: Arial, Helvetica, sans-serif;font-size: 20pt; font-weight: bold; padding: 0.5em 0.5em;border-radius: 25px;\">Doctor Office Patient System</div>\n    <div style=\"background-color: #6AA8EC; padding: 0.5em;border-radius: 2px;\">\n        <p style=\"text-align: center;color: white;font-family: Arial, Helvetica, sans-serif;font-size: 16pt;\">New Patient Registration Form</p>\n    </div>\n\n    <form name=\"regForm\" class=\"div-centerAlt\">\n        <div style=\"margin-bottom: 20px;text-align: left;\">\n            <input type=\"text\" class=\"textfield\" style=\"width: 250px;\" id=\"firstname\" required name=\"firstname\" value=\"Patient First Name\" onfocus=\"this.value=''\"/>\n            <input type=\"text\" class=\"textfield\" style=\"width: 100px;\" id=\"middleinital\" required name=\"middleinital\" value=\"Middle Initial\" onfocus=\"this.value=''\"/>\n            <input type=\"text\" class=\"textfield\" style=\"width: 250px;\" id=\"lastname\" required name=\"lastname\" value=\"Patient Last Name\" onfocus=\"this.value=''\"/>\n        </div>\n        <div style=\"margin-bottom: 20px;text-align: left;\">\n            <input type=\"date\" class=\"textfield\" style=\"width: 200px;\" id=\"dob\" required name=\"dob\" value=\"Patient Date of Birth\" onfocus=\"this.value=''\"/>\n            <input type=\"text\" class=\"textfield\" style=\"width: 190px;\" id=\"ssn\" required name=\"ssn\" value=\"Patient SSN\" onfocus=\"this.value=''\"/>\n            <!--<input type=\"text\" class=\"textfield\" style=\"width: 100px;\" id=\"gender\" required name=\"gender\" value=\"Gender\" onfocus=\"this.value=''\"/>-->\n            <span class=\"bluetext\">Select a gender:  </span><input type=\"radio\" id=\"male\" name=\"gender\" value=\"male\"><label for=\"male\">Male</label>\n            <input type=\"radio\" id=\"female\" name=\"gender\" value=\"female\"><label for=\"female\">Female</label><br>\n        </div>\n        <div style=\"margin-bottom: 20px;text-align: left\">\n            <input type=\"text\" class=\"textfield\" style=\"width: 225px;\" id=\"street\" required name=\"street\" value=\"Street Address\" onfocus=\"this.value=''\"/>\n            <input type=\"text\" class=\"textfield\" style=\"width: 167px;\" id=\"city\" required name=\"city\" value=\"City\" onfocus=\"this.value=''\"/>\n            <!--<input type=\"text\" class=\"textfield\" style=\"width: 150px;\" id=\"state\" required name=\"state\" value=\"State\" onfocus=\"this.value=''\"/>-->\n            <span class=\"bluetext\">Select a state:  </span>\n            <select id=\"state\" name=\"state\">\n                <option value=\"AL\">AL</option>\n                <option value=\"AK\">AK</option>\n                <option value=\"AR\">AR</option>\t\n                <option value=\"AZ\">AZ</option>\n                <option value=\"CA\">CA</option>\n                <option value=\"CO\">CO</option>\n                <option value=\"CT\">CT</option>\n                <option value=\"DC\">DC</option>\n                <option value=\"DE\">DE</option>\n                <option value=\"FL\">FL</option>\n                <option value=\"GA\">GA</option>\n                <option value=\"HI\">HI</option>\n                <option value=\"IA\">IA</option>\t\n                <option value=\"ID\">ID</option>\n                <option value=\"IL\">IL</option>\n                <option value=\"IN\">IN</option>\n                <option value=\"KS\">KS</option>\n                <option value=\"KY\">KY</option>\n                <option value=\"LA\">LA</option>\n                <option value=\"MA\">MA</option>\n                <option value=\"MD\">MD</option>\n                <option value=\"ME\">ME</option>\n                <option value=\"MI\">MI</option>\n                <option value=\"MN\">MN</option>\n                <option value=\"MO\">MO</option>\t\n                <option value=\"MS\">MS</option>\n                <option value=\"MT\">MT</option>\n                <option value=\"NC\">NC</option>\t\n                <option value=\"NE\">NE</option>\n                <option value=\"NH\">NH</option>\n                <option value=\"NJ\">NJ</option>\n                <option value=\"NM\">NM</option>\t\t\t\n                <option value=\"NV\">NV</option>\n                <option value=\"NY\">NY</option>\n                <option value=\"ND\">ND</option>\n                <option value=\"OH\">OH</option>\n                <option value=\"OK\">OK</option>\n                <option value=\"OR\">OR</option>\n                <option value=\"PA\">PA</option>\n                <option value=\"RI\">RI</option>\n                <option value=\"SC\">SC</option>\n                <option value=\"SD\">SD</option>\n                <option value=\"TN\">TN</option>\n                <option value=\"TX\">TX</option>\n                <option value=\"UT\">UT</option>\n                <option value=\"VT\">VT</option>\n                <option value=\"VA\">VA</option>\n                <option value=\"WA\">WA</option>\n                <option value=\"WI\">WI</option>\t\n                <option value=\"WV\">WV</option>\n                <option value=\"WY\">WY</option>\n            </select><br/>\n            <input type=\"text\" class=\"textfield\" style=\"width: 100px;margin-top: 15px;\" id=\"zipcode\" required name=\"zipcode\" value=\"Zipcode\" onfocus=\"this.value=''\"/>\n        </div>\n        <div style=\"margin-top: 35px; margin-bottom: 20px;text-align: left;\">\n            <input type=\"text\" class=\"textfield\" style=\"width: 250px;\" id=\"phone1\" required name=\"phone1\" value=\"Primary Contact Number\" onfocus=\"this.value=''\"/>\n            <input type=\"text\" class=\"textfield\" style=\"width: 250px;\" id=\"phone2\" required name=\"phone2\" value=\"Secondary Contact Number\" onfocus=\"this.value=''\"/>\n        </div>\n        <div style=\"margin-bottom: 20px;text-align: left;\">\n            <input type=\"text\" class=\"textfield\" style=\"width: 250px;\" id=\"emfirstname\" required name=\"emfirstname\" value=\"Emergency Contact First Name\" onfocus=\"this.value=''\"/>\n            <input type=\"text\" class=\"textfield\" style=\"width: 250px;\" id=\"emlastname\" required name=\"emlastname\" value=\"Emergency Contact Last Name\" onfocus=\"this.value=''\"/>\n            <input type=\"text\" class=\"textfield\" style=\"width: 250px; margin-top: 15px;\" id=\"emphone\" required name=\"emphone\" value=\"Emergency Contact Phone\" onfocus=\"this.value=''\"/>\n        </div>\n        <div style=\"margin-top: 35px;margin-bottom: 20px;text-align: left;\">\n            <input type=\"text\" class=\"textfield\" style=\"width: 250px;\" id=\"insurancecompany\" required name=\"insurancecompany\" value=\"Insurance Company Name\" onfocus=\"this.value=''\"/><br/>\n            <input type=\"text\" class=\"textfield\" style=\"width: 250px;\" id=\"policynumber\" required name=\"policynumber\" value=\"Policy Number\" onfocus=\"this.value=''\"/>\n            <input type=\"text\" class=\"textfield\" style=\"width: 250px; margin-top: 15px;\" id=\"groupnumber\" required name=\"groupnumber\" value=\"Group Number\" onfocus=\"this.value=''\"/>\n        </div>\n        <div style=\"margin-bottom: 20px;text-align: left;\">\n            <input type=\"text\" class=\"textfield\" style=\"width: 250px;\" id=\"phfirstname\" required name=\"phfirstname\" value=\"Policyholder First Name\" onfocus=\"this.value=''\"/>\n            <input type=\"text\" class=\"textfield\" style=\"width: 250px;\" id=\"phlastname\" required name=\"phlastname\" value=\"Policyholder Last Name\" onfocus=\"this.value=''\"/>\n            <input type=\"text\" class=\"textfield\" style=\"width: 250px; margin-top: 15px;\" id=\"phssn\" required name=\"phssn\" value=\"Policyholder SSN\" onfocus=\"this.value=''\"/>\n        </div>\n        <div style=\"margin-top: 30px;margin-bottom: 0px;text-align: left;\">\n            <input type=\"text\" class=\"textfield\" style=\"width: 250px;\" id=\"emailaddress\" required name=\"emailaddress\" value=\"Email Address\" onfocus=\"this.value=''\"/>\n            <span class=\"bluetext\">Create Password:</span><input type=\"password\" class=\"textfield\" style=\"width: 250px;\" id=\"password\" required name=\"password\" value=\"Password\" onfocus=\"this.value=''\"/>\n        </div>      \n        <!--<div [hidden]=\"(emailAddress.valid) || (emailAddress.invalid && emailAddress.untouched)\" class=\"alert alert-danger\">\n            Email Address is required\n        </div>-->\n       <!-- <div [hidden]=\"(password.valid) || (password.invalid && password.untouched)\" class=\"alert alert-danger\">\n            Password is required\n        </div>-->\n        <br/><br/>\n        <button type=\"button\" class=\"button\" style=\"margin-right: 20px;border:0;\" (click)=\"toLogin()\">Cancel</button>\n        <button type=\"submit\" class=\"button\" style=\"border:0;\">Register</button><br/><br/>\n    </form>    \n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { PractitionerService } from 'src/app/services/practitioner.service';\n\n@Component({\n  selector: 'app-doctor-add',\n  templateUrl: './doctor-add.component.html',\n  styleUrls: ['./doctor-add.component.scss']\n})\nexport class DoctorAddComponent implements OnInit {\n\n  constructor(private doctorService: PractitionerService) { }\n\n\n  createDoctor(doctor: any){\n    this.doctorService.createDoctor(doctor).subscribe((res) => {console.log(res)});\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n    <h2>Add Doctor</h2>\n</div>\n<h3>Doctor Information</h3>\n<mat-divider></mat-divider>\n\n<form #doctor='ngForm'>\n    <div fxLayoutGap='50px'>\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Email</mat-label>\n            <input matInput name='email' [(ngModel)]='doctor.email' placeholder=\"someone@mail.com\" required>\n        </mat-form-field>\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Password</mat-label>\n            <input matInput name='password' [(ngModel)]='doctor.password' required>\n        </mat-form-field>\n    </div>\n    <div fxLayoutGap='50px'>\n        <mat-form-field appearance=\"fill\">\n            <mat-label>First Name</mat-label>\n            <input matInput name='fName' [(ngModel)]='doctor.fName' required>\n        </mat-form-field>\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Last Name</mat-label>\n            <input matInput name='lName' [(ngModel)]='doctor.lName' required>\n        </mat-form-field>\n    </div>\n    <div fxLayoutGap='50px'>\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Title</mat-label>\n            <input matInput name='title' [(ngModel)]='doctor.title' required>\n        </mat-form-field>\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Paging Number</mat-label>\n            <input matInput name='paginNum' [(ngModel)]='doctor.pagingNum' required>\n        </mat-form-field>\n    </div>\n    <div fxLayoutGap='50px'>\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Contact Number</mat-label>\n            <input matInput name='patientContactNum' [(ngModel)]='doctor.patientContactNum' required>\n        </mat-form-field>\n    </div>\n    <mat-card-actions>\n        <button mat-raised-button color='primary' (click)='createDoctor(doctor.value)'>Submit</button>\n        <button mat-raised-button routerLink='../doctor-list'>Cancel</button>\n    </mat-card-actions>\n</form>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-patient-dashboard',\n  templateUrl: './patient-dashboard.component.html',\n  styleUrls: ['./patient-dashboard.component.scss']\n})\nexport class PatientDashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar color='primary'>\n    <mat-toolbar-row>\n        <span>AMS</span>\n        <div fxFlex fxLayout='row' fxLayoutAlign='flex-end'>\n            <ul fxLayout='row' fxLayoutGap='20px'>\n                <li>\n                    <button mat-icon-button>\n                        <mat-icon>help</mat-icon>\n                    </button>\n                </li>\n                <li>\n                    <button mat-button [matMenuTriggerFor]='menu'>\n                        <mat-icon>person</mat-icon>\n                        <mat-menu #menu='matMenu'>\n                            <button mat-menu-item routerLink='/login'>\n                                <mat-icon>exit_to_app</mat-icon>\n                                Sign Out\n                            </button>\n                        </mat-menu>\n                    </button>\n                </li>\n            </ul>\n        </div>\n    </mat-toolbar-row>\n</mat-toolbar>\n<mat-drawer-container>\n    <mat-drawer mode='side' opened>\n        <mat-nav-list>\n            <div class=\"profile-pic\">\n                <div class=\"header\">\n                    <h2>Brandon</h2>\n                    <h4>Patient</h4>\n                </div>\n                <img src=\"https://img-comment-fun.9cache.com/media/arGxZDX/a3MzPwmn_700w_0.jpg\" alt=\"\">\n            </div>\n            <mat-divider></mat-divider>\n            <mat-card>\n                <mat-card-header>\n                    <mat-card-title>Vitals Overview</mat-card-title>\n                </mat-card-header>\n                <mat-card-content>\n                    Height: 6'2\"\n                </mat-card-content>\n                <mat-card-content>\n                    Weight: 175 lbs\n                </mat-card-content>\n            </mat-card>\n        </mat-nav-list>\n    </mat-drawer>\n    <mat-drawer-content>\n        <router-outlet></router-outlet>\n    </mat-drawer-content>\n</mat-drawer-container>","import { Component, OnInit } from '@angular/core';\nimport { AdminService } from '../../../services/admin.service';\n\n@Component({\n  selector: 'app-admin-list',\n  templateUrl: './admin-list.component.html',\n  styleUrls: ['./admin-list.component.scss']\n})\nexport class AdminListComponent implements OnInit {\n\n  //id, email, password, adminPin, fName, lName\n  displayedColumns: string[] = ['_id', 'fName', 'lName', 'email', 'adminPin', 'password', 'edit', 'delete'];\n  adminList = [];\n  \n\n  constructor(private adminService: AdminService) { }\n\n  ngOnInit(): void {\n    this.adminService.readAdmin().subscribe((res) => {this.adminList = res});\n  }\n\n  deleteAdmin(_id){\n    this.adminService.deleteAdmin(_id).subscribe((res) => {console.log(res)});\n  }\n/*\n  updateAdmin(addAdmin){\n    addAdmin.value.id = this.admin['id'];\n    this.adminService.updateAdmin(addAdmin.value).subscribe((res) => {console.log(res);\n    });\n  }\n*/\n\n}\n","<h2>Admins</h2>\n<div class=\"mat-elevation-z8\">\n\n    <table mat-table [dataSource]=\"adminList\" class=\"mat-elevation-z8\">\n\n        <ng-container matColumnDef=\"_id\">\n            <th mat-header-cell *matHeaderCellDef> ID </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element._id}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"fName\">\n            <th mat-header-cell *matHeaderCellDef> First </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.fName}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"lName\">\n            <th mat-header-cell *matHeaderCellDef> Last </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.lName}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"email\">\n            <th mat-header-cell *matHeaderCellDef> Email </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.email}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"adminPin\">\n            <th mat-header-cell *matHeaderCellDef> PIN </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.adminPin}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"password\">\n            <th mat-header-cell *matHeaderCellDef> Password </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.password}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"edit\">\n            <th mat-header-cell *matHeaderCellDef> Edit </th>\n            <td mat-cell *matCellDef=\"let element\">\n                <button mat-icon-button (click)='selectAdmin(element)' color=\"secondary\">\n                    <mat-icon>launch</mat-icon>\n                </button>\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"delete\">\n            <th mat-header-cell *matHeaderCellDef> Delete </th>\n            <td mat-cell *matCellDef=\"let element\">\n                <button mat-icon-button (click)='deleteAdmin(element._id)' color=\"warn\">\n                    <mat-icon>delete_outline</mat-icon>\n                </button>\n            </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n</div>\n<!--\n<div>\n    <mat-card>\n        <mat-card-header>\n            <mat-card-title>Update a Admin</mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n            <form #addAdmin=\"ngForm\" class=\"mat-elevation-z8\" style=\"width: 100%; padding: 5px;\">\n\n                <mat-form-field>\n                    <input matInput placeholder=\"First Name\" name=\"fName\" [(ngModel)]=\"admin.fName\" required>\n                </mat-form-field>\n                <mat-form-field>\n                    <input matInput placeholder=\"Last Name\" name=\"lName\" [(ngModel)]=\"admin.lName\" required>\n                </mat-form-field>\n\n                <mat-form-field>\n                    <input matInput placeholder=\"Email\" name=\"email\" [(ngModel)]=\"admin.email\" required>\n                </mat-form-field>\n                <mat-form-field>\n                    <input matInput placeholder=\"PIN\" name=\"adminPin\" [(ngModel)]=\"admin.adminPin\" required>\n                </mat-form-field>\n                <mat-form-field>\n                    <input matInput placeholder=\"Password\" name=\"password\" [(ngModel)]=\"admin.password\" required>\n                </mat-form-field>\n            </form>\n\n        </mat-card-content>\n        <mat-card-actions>\n            <button mat-raised-button *ngIf=\"!admin.id\" (click)=\"createAdmin(addAdmin)\" color=\"primary\">Save\n                Contact</button>\n            <button mat-raised-button *ngIf=\"admin.id\" (click)=\"updateAdmin(addAmin)\" color=\"primary\">Update\n                Contact</button>\n            <button mat-raised-button (click)=\"newAdmin()\" color=\"primary\">New..</button>\n        </mat-card-actions>\n    </mat-card>\n</div>\n-->","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Doctors } from '../models/doctors';\nimport { Nurses } from '../models/nurses';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PractitionerService {\n\n  constructor(private http: HttpClient) { }\n\n  API_SERVER = 'http://34.197.208.129:3000';\n\n  readDoctor(){\n    return this.http.get<Doctors[]>(`${this.API_SERVER}/doctors`);\n  }\n  readNurse(){\n    return this.http.get<Nurses[]>(`${this.API_SERVER}/nurses`);\n  }\n\n  createDoctor(doctor: Doctors){\n    return this.http.post<Doctors>(`${this.API_SERVER}/doctors`, doctor);\n  }\n\n  createNurse(nurse: Nurses){\n    return this.http.post<Nurses>(`${this.API_SERVER}/nurses`, nurse);\n  }\n\n  deleteDoctor(_id: number){\n    return this.http.delete(`${this.API_SERVER}/doctors/${_id}`);\n  }\n\n  deleteNurse(_id: number){\n    return this.http.delete(`${this.API_SERVER}/nurses/${_id}`);\n  }\n  updateNurse(_id: string){\n    return this.http.put<Nurses>(`${this.API_SERVER}/nurses/`,_id)\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>header works!</p>\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'app-clock',\n  templateUrl: './clock.component.html',\n  styleUrls: ['./clock.component.scss']\n})\nexport class ClockComponent implements OnInit {\n\n  @ViewChild('hrHand', {static: false}) hrHand: ElementRef;\n  @ViewChild('minHand', {static: false}) minHand: ElementRef;\n  @ViewChild('secHand', {static: false}) secHand: ElementRef;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    setInterval(() => {\n      const date = new Date();\n      this.updateClock(date);\n    }, 1000)\n  }\n\n  updateClock(date){\n    this.secHand.nativeElement.style.transform = 'rotate(' + date.getSeconds() * 6 + 'deg)';\n    this.minHand.nativeElement.style.transform = 'rotate(' + date.getMinutes() * 6 + 'deg)';\n    this.hrHand.nativeElement.style.transform = 'rotate(' + (date.getHours() * 30 + date.getMinutes() * 0.5) + 'deg)';\n  }\n\n}\n","<div class=\"dummy-card\">\n    <div class=\"clock\">\n        <div class=\"num num1\"><div>1</div></div>\n        <div class=\"num num2\"><div>2</div></div>\n        <div class=\"num num3\"><div>3</div></div>\n        <div class=\"num num4\"><div>4</div></div>\n        <div class=\"num num5\"><div>5</div></div>\n        <div class=\"num num6\"><div>6</div></div>\n        <div class=\"num num7\"><div>7</div></div>\n        <div class=\"num num8\"><div>8</div></div>\n        <div class=\"num num9\"><div>9</div></div>\n        <div class=\"num num10\"><div>10</div></div>\n        <div class=\"num num11\"><div>11</div></div>\n        <div class=\"num num12\"><div>12</div></div>\n        <div class=\"hr-hand\" #hrHand></div>\n        <div class=\"min-hand\" #minHand></div>\n        <div class=\"sec-hand\" #secHand></div>\n    </div>\n</div>","import { Component, NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './pages/login/login.component';\nimport { RegisterComponent } from './pages/register/register.component';\nimport { PracticionerDashboardComponent } from './pages/practicioner-dashboard/practicioner-dashboard.component';\nimport { AdminDashboardComponent } from './pages/admin-dashboard/admin-dashboard.component';\nimport { PatientDashboardComponent } from './pages/patient-dashboard/patient-dashboard.component';\nimport { PatientListComponent } from './pages/patient/patient-list/patient-list.component';\nimport { AdminAddComponent } from './pages/admin/admin-add/admin-add.component';\nimport { PatientHomeComponent } from './pages/patient/patient-home/patient-home.component';\nimport { AdminListComponent } from './pages/admin/admin-list/admin-list.component';\nimport { PatientAddComponent } from './pages/patient/patient-add/patient-add.component';\nimport { DoctorListComponent } from './pages/practitioner/doctor-list/doctor-list.component';\nimport { DoctorAddComponent } from './pages/practitioner/doctor-add/doctor-add.component';\nimport { NurseListComponent } from './pages/practitioner/nurse-list/nurse-list.component';\nimport { NurseAddComponent } from './pages/practitioner/nurse-add/nurse-add.component';\nimport { AdminHomeComponent } from './pages/admin/admin-home/admin-home.component';\nimport { PractitionerHomepageComponent } from './pages/practitioner/practitioner-homepage/practitioner-homepage.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginComponent\n  },\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: 'register',\n    component: RegisterComponent\n  },\n  {\n    path: 'patient',\n    component: PatientDashboardComponent,\n    children: [\n      {path: '', component: PatientHomeComponent}\n    ]\n  },\n  {\n    path: 'admin',\n    component: AdminDashboardComponent,\n    children: [\n      { path: 'dashboard', component: AdminHomeComponent },\n      { path: 'admin-list', component: AdminListComponent },\n      { path: 'admin-add', component: AdminAddComponent },\n      { path: 'patient-list', component: PatientListComponent},\n      { path: 'patient-add', component: PatientAddComponent},\n      { path: 'doctor-list', component: DoctorListComponent},\n      { path: 'doctor-add', component: DoctorAddComponent},\n      { path: 'nurse-list', component: NurseListComponent},\n      { path: 'nurse-add', component: NurseAddComponent}\n    ]\n  },\n  {\n    path: 'practitioner',\n    component: PracticionerDashboardComponent,\n    children: [\n      {path: '', component: PractitionerHomepageComponent}\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}